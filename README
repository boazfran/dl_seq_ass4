The implementation includes 2 scripts:
bimpm_train.py - for creating and training a bimpm model
bimpm_predict.py - for testing the model against a test set
Each script has a command-line help specifying the arguments including some hyper parameters and the location of the
input and output files.
The train script default argument values are the ones we used for the result we added to the report.

Needed files for the running:
- The SNLI dataset files, can be downloaded from  https://nlp.stanford.edu/projects/snli/snli_1.0.zip specifically the
  model training and testing requires the *.txt files: snli_1.0_train.txt, snli_1.0_dev.txt, snli_1.0_test.txt
- For the pretrained word embedding we used as the paper suggested: https://nlp.stanford.edu/data/glove.840B.300d.zip

Required python packages:
- We used python3
- pytorch
- IPython
- torchtext
- torchinfo

Train Output:
- A csv file describing the model hpyer parameters and the accuracy and loss at the
  different train epochs.
- The trained model.

Predict Output:
- The predict script just prints the loss and accuracy. It used batch_size 1 hard coded.

$ python3 bimpm_train.py --help
usage: bimpm_train.py [-h] [--output_dir OUTPUT_DIR] [--model MODEL] [--word_embedding_file WORD_EMBEDDING_FILE] [--snli_folder SNLI_FOLDER] [--results_file RESULTS_FILE] [--n_epochs N_EPOCHS]
                      [--learning_rate LEARNING_RATE [LEARNING_RATE ...]] [--dropout DROPOUT [DROPOUT ...]] [--batch_size BATCH_SIZE [BATCH_SIZE ...]] [--n_perspective N_PERSPECTIVE [N_PERSPECTIVE ...]]
                      [--strategies STRATEGIES [STRATEGIES ...]]

BiMPM pytorch implementation

optional arguments:
  -h, --help            show this help message and exit
  --output_dir OUTPUT_DIR
                        output dir to save the model
  --model MODEL         Continue training an existing model - provide path. Default is None
  --word_embedding_file WORD_EMBEDDING_FILE
                        Path to the pretrained word embedding file. Default is "glove.6B.300d.txt".
  --snli_folder SNLI_FOLDER
                        Folder with the SNLI files. Default is "./
  --results_file RESULTS_FILE
                        Output file to save results. Default is "results.csv"
  --n_epochs N_EPOCHS   Number of train epochs. Default is 3.
  --learning_rate LEARNING_RATE [LEARNING_RATE ...]
                        Space separated list of learning rates. Default is 0.001
  --dropout DROPOUT [DROPOUT ...]
                        Space separated list of dropouts. Default is 0.1.
  --batch_size BATCH_SIZE [BATCH_SIZE ...]
                        Space separated list of batch sizes. Default is 64.
  --n_perspective N_PERSPECTIVE [N_PERSPECTIVE ...]
                        Space separated list of perspective sizes. Default is 1.
  --strategies STRATEGIES [STRATEGIES ...]
                        Space separated list of matching strategies - all strategies in the list will be *applied together* (and not in different runs) in the model. Options are: full/max_pool/attentive/max_attentive. Default is
                        all strategies.

$ python3 bimpm_predict.py --help
usage: bimpm_predict.py [-h] model test_file

test BiMPM model

positional arguments:
  model       Path to the model file.
  test_file   path to the test file.

optional arguments:
  -h, --help  show this help message and exit
